<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.processmining.dao.MergeEventLogMapper" >
  <resultMap id="BaseResultMap" type="com.processmining.entity.MergeEventLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="targetEventLogId" property="targeteventlogid" jdbcType="INTEGER" />
    <result column="sourceEventLog1Id" property="sourceeventlog1id" jdbcType="INTEGER" />
    <result column="sourceEventLog2Id" property="sourceeventlog2id" jdbcType="INTEGER" />
    <result column="targetName" property="targetname" jdbcType="VARCHAR" />
    <result column="source1Name" property="source1name" jdbcType="VARCHAR" />
    <result column="source2Name" property="source2name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, targetEventLogId, sourceEventLog1Id, sourceEventLog2Id, targetName, source1Name, 
    source2Name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from merge_eventlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from merge_eventlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.processmining.entity.MergeEventLog" >
    insert into merge_eventlog (id, targetEventLogId, sourceEventLog1Id, 
      sourceEventLog2Id, targetName, source1Name, 
      source2Name)
    values (#{id,jdbcType=INTEGER}, #{targeteventlogid,jdbcType=INTEGER}, #{sourceeventlog1id,jdbcType=INTEGER}, 
      #{sourceeventlog2id,jdbcType=INTEGER}, #{targetname,jdbcType=VARCHAR}, #{source1name,jdbcType=VARCHAR}, 
      #{source2name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.processmining.entity.MergeEventLog" >
    insert into merge_eventlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="targeteventlogid != null" >
        targetEventLogId,
      </if>
      <if test="sourceeventlog1id != null" >
        sourceEventLog1Id,
      </if>
      <if test="sourceeventlog2id != null" >
        sourceEventLog2Id,
      </if>
      <if test="targetname != null" >
        targetName,
      </if>
      <if test="source1name != null" >
        source1Name,
      </if>
      <if test="source2name != null" >
        source2Name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="targeteventlogid != null" >
        #{targeteventlogid,jdbcType=INTEGER},
      </if>
      <if test="sourceeventlog1id != null" >
        #{sourceeventlog1id,jdbcType=INTEGER},
      </if>
      <if test="sourceeventlog2id != null" >
        #{sourceeventlog2id,jdbcType=INTEGER},
      </if>
      <if test="targetname != null" >
        #{targetname,jdbcType=VARCHAR},
      </if>
      <if test="source1name != null" >
        #{source1name,jdbcType=VARCHAR},
      </if>
      <if test="source2name != null" >
        #{source2name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.processmining.entity.MergeEventLog" >
    update merge_eventlog
    <set >
      <if test="targeteventlogid != null" >
        targetEventLogId = #{targeteventlogid,jdbcType=INTEGER},
      </if>
      <if test="sourceeventlog1id != null" >
        sourceEventLog1Id = #{sourceeventlog1id,jdbcType=INTEGER},
      </if>
      <if test="sourceeventlog2id != null" >
        sourceEventLog2Id = #{sourceeventlog2id,jdbcType=INTEGER},
      </if>
      <if test="targetname != null" >
        targetName = #{targetname,jdbcType=VARCHAR},
      </if>
      <if test="source1name != null" >
        source1Name = #{source1name,jdbcType=VARCHAR},
      </if>
      <if test="source2name != null" >
        source2Name = #{source2name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.processmining.entity.MergeEventLog" >
    update merge_eventlog
    set targetEventLogId = #{targeteventlogid,jdbcType=INTEGER},
      sourceEventLog1Id = #{sourceeventlog1id,jdbcType=INTEGER},
      sourceEventLog2Id = #{sourceeventlog2id,jdbcType=INTEGER},
      targetName = #{targetname,jdbcType=VARCHAR},
      source1Name = #{source1name,jdbcType=VARCHAR},
      source2Name = #{source2name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>